lua_package_path "/vendor/?.lua;;";
lua_code_cache on;

map "$arg_type-$arg_mode" $script {
    default             "";
    "catalog-checkauth" "checkauth.lua";
    "catalog-init"      "init.lua";
    "catalog-file"      "file.lua";
    "catalog-import"    "import.lua";
}

server {
    listen 80;
    error_log stderr info;
    charset utf8;
    set_by_lua $graphql_endpoint_uri 'return os.getenv("GRAPHQL_ENDPOINT_URI")';
    # client_max_body_size 300m;

    location  / {
        # client_body_in_file_only on;
        # client_body_in_single_buffer on;
        # lua_need_request_body on;

        if ($script = "") {
            return 400;
        }

        content_by_lua_file /app/$script;
    }
}
